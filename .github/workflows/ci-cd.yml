name: CI
# Триггеры для запуска CI/CD пайплайна
on:
  push:
    branches: [ default ]
  pull_request:
    branches: [ default ]
jobs:  
  build-and-test:    
    runs-on: ubuntu-latest  # Выполнять на последней версии Ubuntu    
    # Настраиваем сервисы, необходимые для тестирования    
    services:      
      postgres:        
        image: postgres:14-alpine  # Используем PostgreSQL 14 на Alpine        
        env:          
          POSTGRES_USER: postgres          
          POSTGRES_PASSWORD: postgres          
          POSTGRES_DB: userservice        
        ports:          
          - 5432:5432  # Проброс порта PostgreSQL        
        options: >-          
          --health-cmd pg_isready          
          --health-interval 10s          
          --health-timeout 5s          
          --health-retries 5    
    steps:      
      # Шаг 1: Получение кода из репозитория      
      - uses: actions/checkout@v3      
      # Шаг 2: Настройка Go версии 1.20      
      - name: Set up Go        
        uses: actions/setup-go@v4        
        with:          
          go-version: '1.20'      
      # Шаг 3: Сборка Docker образа      
      - name: Build Docker image        
        run: docker build -t user-microservice --no-cache .      
      # Шаг 3.1: Проверка наличия Docker образа (необязательный шаг)      
      - name: List Docker images        
        run: docker images      
      # Шаг 4: Запуск Docker контейнера для тестирования      
      - name: Run Docker container        
        run: |          
          docker run -d --network host \            
            -e POSTGRES_HOST=localhost \            
            -e POSTGRES_PORT=5432 \            
            -e POSTGRES_USER=postgres \            
            -e POSTGRES_PASSWORD=postgres \            
            -e POSTGRES_DB=userservice \            
            --name user-service user-microservice          
          sleep 10  # Даем приложению время на запуск      
      # Шаг 5: Запуск Go тестов      
      - name: Run tests        
        run: go test ./...      
      # Шаг 6: Аутентификация в Docker Hub (только для ветки default)      
      - name: Log in to Docker Hub        
        if: github.ref == 'refs/heads/default'        
        uses: docker/login-action@v2        
        with:          
          username: ${{ secrets.DOCKER_HUB_USERNAME }}          
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}      
      # Шаг 7: Сборка и публикация Docker образа      
      - name: Build and Push Docker image        
        run: |          
          docker build -t user-microservice --no-cache .          
          docker tag user-microservice ${{ secrets.DOCKER_HUB_USERNAME }}/user-microservice:latest          
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/user-microservice:latest        
        if: github.ref == 'refs/heads/default'